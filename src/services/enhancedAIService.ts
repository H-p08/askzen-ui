
interface AIResponse {
  answer: string;
  error?: string;
  confidence: number;
  relatedTopics: string[];
  followUpQuestions: string[];
}

interface KnowledgeBase {
  [key: string]: {
    [question: string]: {
      content: string;
      difficulty: 'basic' | 'intermediate' | 'advanced';
      keywords: string[];
      examples: string[];
    };
  };
}

export class EnhancedAIService {
  private knowledgeBase: KnowledgeBase;
  private conversationHistory: Array<{question: string; answer: string; timestamp: Date}> = [];

  constructor() {
    this.initializeEnhancedKnowledgeBase();
  }

  private initializeEnhancedKnowledgeBase() {
    this.knowledgeBase = {
      math: {
        'algebra_basics': {
          content: `# ЁЯУЪ **Algebra - рдЧрдгрд┐рдд рдХреА рдЖрдзрд╛рд░рднреВрдд рд╢рд╛рдЦрд╛**

## **рдореБрдЦреНрдп рдЕрд╡рдзрд╛рд░рдгрд╛рдПрдВ (Core Concepts):**

### ЁЯФв **Variables (рдЪрд░):**
- **x, y, z** - рдЕрдЬреНрдЮрд╛рдд рдорд╛рди (Unknown values)
- **Constants** - рд╕реНрдерд┐рд░ рдорд╛рди рдЬреИрд╕реЗ 5, 10, ╧А

### тЪЦя╕П **Equations (рд╕рдореАрдХрд░рдг):**
- **Linear:** ax + b = c
- **Quadratic:** ax┬▓ + bx + c = 0
- **System:** Multiple equations рдПрдХ рд╕рд╛рде

## **ЁЯОп Problem Solving Steps:**
1. **рд╕рдордЭреЗрдВ** - Problem рдХреЛ рдзреНрдпрд╛рди рд╕реЗ рдкрдврд╝реЗрдВ
2. **рдкрд╣рдЪрд╛рдиреЗрдВ** - рдХреМрди рд╕рд╛ variable find рдХрд░рдирд╛ рд╣реИ
3. **Setup** - Equation рдмрдирд╛рдПрдВ
4. **Solve** - Step by step рд╣рд▓ рдХрд░реЗрдВ
5. **Check** - Answer рдХреЛ verify рдХрд░реЗрдВ

## **ЁЯТб Practical Examples:**

### **Example 1:** Simple Linear
**Problem:** 2x + 5 = 13
**Solution:**
- 2x + 5 = 13
- 2x = 13 - 5 = 8
- x = 8 ├╖ 2 = 4
**Answer:** x = 4

### **Example 2:** Word Problem
**Problem:** рд░рд╛рдо рдХреЗ рдкрд╛рд╕ рдХрд░реАрдо рд╕реЗ 5 рд░реБрдкрдпреЗ рдЬреНрдпрд╛рджрд╛ рд╣реИрдВред рджреЛрдиреЛрдВ рдХреЗ рдкрд╛рд╕ рдХреБрд▓ 25 рд░реБрдкрдпреЗ рд╣реИрдВред
**Solution:**
- рд░рд╛рдо рдХреЗ рдкрд╛рд╕ = x + 5
- рдХрд░реАрдо рдХреЗ рдкрд╛рд╕ = x
- Total: (x + 5) + x = 25
- 2x + 5 = 25
- 2x = 20
- x = 10
**Answer:** рдХрд░реАрдо рдХреЗ рдкрд╛рд╕ 10, рд░рд╛рдо рдХреЗ рдкрд╛рд╕ 15 рд░реБрдкрдпреЗ

## **ЁЯФН Advanced Topics:**
- **Factoring:** (x + 2)(x + 3) = x┬▓ + 5x + 6
- **Completing Square:** x┬▓ + 6x + 9 = (x + 3)┬▓
- **Quadratic Formula:** x = (-b ┬▒ тИЪ(b┬▓ - 4ac)) / 2a

## **ЁЯУИ Real-World Applications:**
- **Business:** Profit/Loss calculations
- **Engineering:** Design formulas
- **Science:** Physics equations
- **Daily Life:** Shopping discounts, loan calculations`,
          difficulty: 'basic',
          keywords: ['algebra', 'variable', 'equation', 'solve', 'linear'],
          examples: ['2x + 5 = 13', 'x┬▓ - 4 = 0', 'system of equations']
        },

        'geometry_fundamentals': {
          content: `# ЁЯУР **Geometry - рдЖрдХрд╛рд░ рдФрд░ рд╕реНрдерд╛рди рдХрд╛ рд╡рд┐рдЬреНрдЮрд╛рди**

## **ЁЯФ║ Basic Shapes (рдореВрд▓рднреВрдд рдЖрдХреГрддрд┐рдпрд╛рдВ):**

### **Triangle (рддреНрд░рд┐рднреБрдЬ):**
- **Area = ┬╜ ├Ч base ├Ч height**
- **Perimeter = a + b + c**
- **Types:** Equilateral, Isosceles, Scalene

### **Rectangle (рдЖрдпрдд):**
- **Area = length ├Ч width**
- **Perimeter = 2(l + w)**

### **Circle (рд╡реГрддреНрдд):**
- **Area = ╧Аr┬▓**
- **Circumference = 2╧Аr**
- **╧А тЙИ 3.14159**

## **ЁЯОп Important Theorems:**

### **Pythagoras Theorem:**
**a┬▓ + b┬▓ = c┬▓** (Right triangle рдореЗрдВ)

**Example:**
- рдПрдХ triangle рдХреА рднреБрдЬрд╛рдПрдВ 3, 4, рдФрд░ 5 cm рд╣реИрдВ
- 3┬▓ + 4┬▓ = 9 + 16 = 25 = 5┬▓
- рдпрд╣ рдПрдХ right triangle рд╣реИ!

## **ЁЯУП Measurement Units:**
- **Length:** mm, cm, m, km
- **Area:** cm┬▓, m┬▓, hectare
- **Volume:** cm┬│, liter, m┬│

## **ЁЯПЧя╕П Practical Applications:**
- **Construction:** Building measurements
- **Art & Design:** Proportions
- **Navigation:** Distance calculations
- **Sports:** Field dimensions`,
          difficulty: 'basic',
          keywords: ['geometry', 'triangle', 'circle', 'area', 'perimeter', 'pythagoras'],
          examples: ['area of triangle', 'pythagorean theorem', 'circle circumference']
        }
      },

      science: {
        'physics_basics': {
          content: `# ЁЯФм **Physics - рдкреНрд░рдХреГрддрд┐ рдХреЗ рдирд┐рдпрдореЛрдВ рдХрд╛ рдЕрдзреНрдпрдпрди**

## **тЪб Fundamental Forces:**

### **1. Gravity (рдЧреБрд░реБрддреНрд╡рд╛рдХрд░реНрд╖рдг):**
- **Formula:** F = mg
- **g = 9.8 m/s┬▓** (Earth рдкрд░)
- **Applications:** Objects falling, planetary motion

### **2. Electromagnetic Force:**
- **Electricity:** Current, Voltage, Resistance
- **Magnetism:** North-South poles
- **Light:** Electromagnetic waves

## **ЁЯЪЧ Motion & Mechanics:**

### **Newton's Laws:**
1. **First Law:** Object at rest stays at rest (Inertia)
2. **Second Law:** F = ma (Force = mass ├Ч acceleration)
3. **Third Law:** Every action has equal opposite reaction

### **Key Formulas:**
- **Speed = Distance/Time**
- **Acceleration = Change in velocity/Time**
- **Kinetic Energy = ┬╜mv┬▓**
- **Potential Energy = mgh**

## **ЁЯТб Energy & Power:**

### **Types of Energy:**
- **Kinetic:** Moving objects
- **Potential:** Stored energy
- **Chemical:** Batteries, food
- **Nuclear:** Atoms
- **Solar:** Sun's radiation

### **Conservation Law:**
Energy cannot be created or destroyed, only transformed!

## **ЁЯМК Waves & Sound:**
- **Sound Speed:** ~343 m/s in air
- **Light Speed:** 3├Ч10тБ╕ m/s
- **Frequency ├Ч Wavelength = Speed**

## **ЁЯФм Modern Physics:**
- **Atoms:** Protons, neutrons, electrons
- **Quantum:** Energy in packets
- **Relativity:** E = mc┬▓

## **ЁЯУ▒ Daily Life Applications:**
- **Smartphones:** Electricity, magnetism, waves
- **Cars:** Mechanics, combustion
- **Weather:** Pressure, temperature
- **Cooking:** Heat transfer`,
          difficulty: 'intermediate',
          keywords: ['physics', 'force', 'energy', 'motion', 'newton', 'gravity'],
          examples: ['F=ma', 'conservation of energy', 'wave equation']
        }
      },

      english: {
        'grammar_mastery': {
          content: `# ЁЯУЦ **English Grammar - рднрд╛рд╖рд╛ рдХреА рд╕рдВрд░рдЪрдирд╛**

## **ЁЯПЧя╕П Sentence Structure:**

### **Basic Pattern:**
**Subject + Verb + Object (SVO)**

**Examples:**
- **I** (S) **eat** (V) **food** (O)
- **She** (S) **reads** (V) **books** (O)
- **They** (S) **play** (V) **cricket** (O)

## **ЁЯУЭ Parts of Speech:**

### **1. Noun (рд╕рдВрдЬреНрдЮрд╛):**
- **Person:** Ram, teacher, doctor
- **Place:** Delhi, school, market
- **Thing:** book, car, phone
- **Idea:** love, happiness, freedom

### **2. Verb (рдХреНрд░рд┐рдпрд╛):**
- **Action:** run, jump, eat, write
- **Being:** is, am, are, was, were
- **Helping:** can, will, should, must

### **3. Adjective (рд╡рд┐рд╢реЗрд╖рдг):**
- **Describing nouns:** beautiful, big, smart
- **Position:** before noun рдпрд╛ after linking verb

### **4. Adverb (рдХреНрд░рд┐рдпрд╛ рд╡рд┐рд╢реЗрд╖рдг):**
- **Modify verbs:** quickly, slowly, carefully
- **Usually end in -ly**

## **тП░ Tenses (рдХрд╛рд▓):**

### **Present Tense:**
- **Simple:** I eat rice daily
- **Continuous:** I am eating rice now
- **Perfect:** I have eaten rice

### **Past Tense:**
- **Simple:** I ate rice yesterday
- **Continuous:** I was eating rice
- **Perfect:** I had eaten rice

### **Future Tense:**
- **Simple:** I will eat rice tomorrow
- **Continuous:** I will be eating rice
- **Perfect:** I will have eaten rice

## **тЭМ Common Mistakes:**

### **Subject-Verb Agreement:**
- **Correct:** He goes to school
- **Wrong:** He go to school

### **Article Usage:**
- **A/An:** Before singular countable nouns
- **The:** Specific nouns

### **Prepositions:**
- **In:** months, years, cities
- **On:** days, dates, surfaces
- **At:** specific times, places

## **тЬНя╕П Writing Tips:**
1. **Keep sentences clear and simple**
2. **Use active voice when possible**
3. **Check subject-verb agreement**
4. **Proofread for spelling and punctuation**

## **ЁЯУЪ Practice Exercises:**
- **Daily reading:** newspapers, stories
- **Writing practice:** diary, essays
- **Speaking:** conversations, presentations
- **Listening:** English movies, songs`,
          difficulty: 'basic',
          keywords: ['grammar', 'tense', 'noun', 'verb', 'sentence', 'english'],
          examples: ['subject verb object', 'present tense', 'past tense']
        }
      },

      reasoning: {
        'logical_thinking_advanced': {
          content: `# ЁЯза **Logical Reasoning - рддрд░реНрдХрд╢реАрд▓ рдЪрд┐рдВрддрди**

## **ЁЯОп Problem-Solving Framework:**

### **IDEAL Method:**
1. **I**dentify the problem clearly
2. **D**efine possible solutions
3. **E**xamine alternatives
4. **A**ct on best solution
5. **L**ook back and learn

## **ЁЯФН Types of Reasoning:**

### **1. Deductive Reasoning (рдирд┐рдЧрдордирд╛рддреНрдордХ):**
- **General тЖТ Specific**
- **Example:**
  - All birds can fly (General rule)
  - Sparrow is a bird (Specific case)
  - Therefore, sparrow can fly (Conclusion)

### **2. Inductive Reasoning (рдЖрдЧрдордирд╛рддреНрдордХ):**
- **Specific тЖТ General**
- **Example:**
  - Sun rises in east today
  - Sun rose in east yesterday
  - Sun always rises in east (Pattern)

### **3. Abductive Reasoning (рдЕрдкрд╣рд░рдгрд╛рддреНрдордХ):**
- **Best Explanation**
- **Example:**
  - Car won't start
  - Battery might be dead (Most likely cause)

## **ЁЯзй Critical Thinking Skills:**

### **Analysis Questions:**
- **What is the evidence?**
- **Are there alternative explanations?**
- **What assumptions are being made?**
- **What are the consequences?**
- **How reliable is the source?**

### **Logical Fallacies to Avoid:**
- **Ad Hominem:** Attacking person, not argument
- **Straw Man:** Misrepresenting opponent's position
- **False Dilemma:** Only two options when more exist
- **Hasty Generalization:** Too small sample size

## **ЁЯФв Mathematical Logic:**

### **Syllogisms:**
- **Major Premise:** All A are B
- **Minor Premise:** C is A
- **Conclusion:** Therefore, C is B

### **Truth Tables:**
- **AND:** Both must be true
- **OR:** At least one must be true
- **NOT:** Opposite of given statement

## **ЁЯО▓ Probability & Statistics:**
- **Probability = Favorable outcomes / Total outcomes**
- **Mean, Median, Mode**
- **Correlation vs Causation**

## **ЁЯТб Practical Applications:**

### **Decision Making:**
- **List pros and cons**
- **Consider long-term consequences**
- **Gather relevant information**
- **Avoid emotional bias**

### **Problem Solving at Work:**
- **Break complex problems into smaller parts**
- **Use data and evidence**
- **Consider multiple perspectives**
- **Test solutions before full implementation**

## **ЁЯзк Scientific Method:**
1. **Observation**
2. **Question**
3. **Hypothesis**
4. **Experiment**
5. **Analysis**
6. **Conclusion**

## **ЁЯУИ Improving Logic Skills:**
- **Practice puzzles and riddles**
- **Read diverse perspectives**
- **Question your own beliefs**
- **Learn from mistakes**
- **Discuss ideas with others**`,
          difficulty: 'advanced',
          keywords: ['logic', 'reasoning', 'critical thinking', 'problem solving', 'deductive', 'inductive'],
          examples: ['deductive reasoning', 'syllogism', 'critical analysis']
        }
      }
    };
  }

  async answerQuestion(question: string, subject: string = 'general'): Promise<AIResponse> {
    console.log("Enhanced AI processing question:", question, "in subject:", subject);
    
    try {
      await new Promise(resolve => setTimeout(resolve, 1500)); // Thinking time
      
      const analysis = this.analyzeQuestion(question, subject);
      const answer = this.generateEnhancedAnswer(question, subject, analysis);
      const relatedTopics = this.findRelatedTopics(question, subject);
      const followUpQuestions = this.generateFollowUpQuestions(question, subject);
      
      // Store in conversation history
      this.conversationHistory.push({
        question,
        answer,
        timestamp: new Date()
      });
      
      return {
        answer: this.formatEnhancedAnswer(answer, subject, question, analysis),
        confidence: analysis.confidence,
        relatedTopics,
        followUpQuestions
      };
    } catch (error) {
      console.error('Enhanced AI Error:', error);
      return {
        answer: "рдХреНрд╖рдорд╛ рдХрд░реЗрдВ, рдЖрдкрдХреЗ рдкреНрд░рд╢реНрди рдХреЛ process рдХрд░рддреЗ рд╕рдордп technical issue рдЖрдпрд╛ред рдХреГрдкрдпрд╛ рдлрд┐рд░ рд╕реЗ рдкреНрд░рдпрд╛рд╕ рдХрд░реЗрдВред",
        error: error instanceof Error ? error.message : 'Unknown error',
        confidence: 0,
        relatedTopics: [],
        followUpQuestions: []
      };
    }
  }

  private analyzeQuestion(question: string, subject: string) {
    const lowerQuestion = question.toLowerCase();
    let confidence = 0.7;
    let difficulty: 'basic' | 'intermediate' | 'advanced' = 'basic';
    let questionType = 'general';
    
    // Analyze question complexity
    const complexWords = ['complex', 'advanced', 'detailed', 'comprehensive', 'analysis'];
    const basicWords = ['what', 'basic', 'simple', 'introduction'];
    
    if (complexWords.some(word => lowerQuestion.includes(word))) {
      difficulty = 'advanced';
      confidence = 0.8;
    } else if (basicWords.some(word => lowerQuestion.includes(word))) {
      difficulty = 'basic';
      confidence = 0.9;
    } else {
      difficulty = 'intermediate';
      confidence = 0.85;
    }
    
    // Determine question type
    if (lowerQuestion.includes('how')) questionType = 'procedural';
    else if (lowerQuestion.includes('why')) questionType = 'explanatory';
    else if (lowerQuestion.includes('what')) questionType = 'definitional';
    else if (lowerQuestion.includes('solve') || lowerQuestion.includes('calculate')) questionType = 'problem-solving';
    
    return { confidence, difficulty, questionType };
  }

  private generateEnhancedAnswer(question: string, subject: string, analysis: any): string {
    const lowerQuestion = question.toLowerCase();
    
    // Try to find specific knowledge first
    if (this.knowledgeBase[subject]) {
      for (const [topicKey, topicData] of Object.entries(this.knowledgeBase[subject])) {
        if (topicData.keywords.some(keyword => lowerQuestion.includes(keyword))) {
          return topicData.content;
        }
      }
    }
    
    // Subject-specific enhanced responses
    switch (subject) {
      case 'math':
        return this.generateMathAnswer(question, analysis);
      case 'science':
        return this.generateScienceAnswer(question, analysis);
      case 'english':
        return this.generateEnglishAnswer(question, analysis);
      case 'reasoning':
        return this.generateReasoningAnswer(question, analysis);
      default:
        return this.generateGeneralAnswer(question, analysis);
    }
  }

  private generateMathAnswer(question: string, analysis: any): string {
    return `# ЁЯзо **Mathematics Solution**

## **рд╕рдорд╕реНрдпрд╛ рд╡рд┐рд╢реНрд▓реЗрд╖рдг (Problem Analysis):**
рдЖрдкрдХрд╛ рдкреНрд░рд╢реНрди mathematics рд╕реЗ рд╕рдВрдмрдВрдзрд┐рдд рд╣реИред рдЖрдЗрдП рдЗрд╕реЗ step-by-step solve рдХрд░рддреЗ рд╣реИрдВред

## **ЁЯОп Solution Approach:**

### **Step 1: рд╕рдордЭрдирд╛ (Understanding)**
- рдкрд╣рд▓реЗ problem рдХреЛ clearly рд╕рдордЭрддреЗ рд╣реИрдВ
- рдХреМрди рд╕реА information рджреА рдЧрдИ рд╣реИ
- рдХреНрдпрд╛ find рдХрд░рдирд╛ рд╣реИ

### **Step 2: Planning**
- рдХреМрди рд╕рд╛ formula рдпрд╛ method use рдХрд░рдирд╛ рд╣реИ
- рдХрд┐рд╕ approach рд╕реЗ solve рдХрд░рдирд╛ рд╣реИ

### **Step 3: Execution**
- Step by step calculation
- рд╣рд░ step рдХреЛ verify рдХрд░рдирд╛

### **Step 4: Verification**
- Answer рдХреЛ check рдХрд░рдирд╛
- Logic sense рдмрдирд╛рддрд╛ рд╣реИ рдпрд╛ рдирд╣реАрдВ

## **ЁЯТб Math Tips:**
- **рд╣рдореЗрд╢рд╛ units check рдХрд░реЗрдВ**
- **Rough estimate рдХрд░рдХреЗ verify рдХрд░реЗрдВ**
- **Multiple methods рд╕реЗ solve рдХрд░рдХреЗ confirm рдХрд░реЗрдВ**

## **ЁЯУЪ Related Concepts:**
рдЧрдгрд┐рдд рдореЗрдВ practice рдмрд╣реБрдд рдЬрд░реВрд░реА рд╣реИред Regular practice рд╕реЗ concepts clear рд╣реЛрддреЗ рд╣реИрдВред

**рдХреНрдпрд╛ рдЖрдк рдЕрдкрдирд╛ specific math problem share рдХрд░ рд╕рдХрддреЗ рд╣реИрдВ? рдореИрдВ detailed solution рджреВрдВрдЧрд╛ред**`;
  }

  private generateScienceAnswer(question: string, analysis: any): string {
    return `# ЁЯФм **Science Explanation**

## **рд╡реИрдЬреНрдЮрд╛рдирд┐рдХ рд╡рд┐рд╢реНрд▓реЗрд╖рдг (Scientific Analysis):**
Science рд╣рдорд╛рд░реЗ рдЪрд╛рд░реЛрдВ рдУрд░ рдХреА рджреБрдирд┐рдпрд╛ рдХреЛ рд╕рдордЭрдиреЗ рдХрд╛ рддрд░реАрдХрд╛ рд╣реИред

## **ЁЯМЯ Key Scientific Principles:**

### **Observation (рдЕрд╡рд▓реЛрдХрди):**
- рдкрд╣рд▓реЗ clearly observe рдХрд░рддреЗ рд╣реИрдВ
- Details рдкрд░ рдзреНрдпрд╛рди рджреЗрддреЗ рд╣реИрдВ
- Patterns identify рдХрд░рддреЗ рд╣реИрдВ

### **Hypothesis (рдкрд░рд┐рдХрд▓реНрдкрдирд╛):**
- Educated guess рдмрдирд╛рддреЗ рд╣реИрдВ
- Testable prediction рдХрд░рддреЗ рд╣реИрдВ

### **Experimentation (рдкреНрд░рдпреЛрдЧ):**
- Controlled experiments рдХрд░рддреЗ рд╣реИрдВ
- Variables рдХреЛ control рдХрд░рддреЗ рд╣реИрдВ
- Data collect рдХрд░рддреЗ рд╣реИрдВ

### **Analysis (рд╡рд┐рд╢реНрд▓реЗрд╖рдг):**
- Results рдХреЛ analyze рдХрд░рддреЗ рд╣реИрдВ
- Conclusions draw рдХрд░рддреЗ рд╣реИрдВ

## **ЁЯзм Real-World Applications:**
Science рд╕рд┐рд░реНрдл textbook рдореЗрдВ рдирд╣реАрдВ рд╣реИ - рдпрд╣ рд╣рдорд╛рд░реЗ daily life рдореЗрдВ everywhere рд╣реИ!

## **ЁЯУ▒ Examples in Daily Life:**
- **Cooking:** Chemical reactions
- **Weather:** Physics principles  
- **Medicine:** Biology рдФрд░ chemistry
- **Technology:** Engineering applications

**рдЖрдкрдХрд╛ specific science question рдХреНрдпрд╛ рд╣реИ? рдореИрдВ detailed scientific explanation рджреВрдВрдЧрд╛ред**`;
  }

  private generateEnglishAnswer(question: string, analysis: any): string {
    return `# ЁЯУЪ **English Language Help**

## **рднрд╛рд╖рд╛ рд╕реАрдЦрдиреЗ рдХреА рдпрд╛рддреНрд░рд╛ (Language Learning Journey):**

### **ЁЯОп Focus Areas:**

#### **Grammar Foundation:**
- **Sentence structure** рд╕рдордЭрдирд╛
- **Tenses** рдХреА proper usage
- **Parts of speech** identify рдХрд░рдирд╛

#### **Vocabulary Building:**
- **Daily new words** рд╕реАрдЦрдирд╛  
- **Context** рдореЗрдВ words рдХрд╛ use
- **Synonyms рдФрд░ antonyms**

#### **Communication Skills:**
- **Speaking** confidently
- **Writing** clearly
- **Listening** actively
- **Reading** comprehensively

## **ЁЯТб Learning Strategies:**

### **Daily Practice:**
- **15 minutes reading** English content
- **New words** in notebook рд▓рд┐рдЦрдирд╛
- **Speaking practice** with friends/family

### **Fun Methods:**
- **English movies** with subtitles
- **English songs** рд╕реБрдирдирд╛
- **Social media** in English
- **Games** in English

## **тЬНя╕П Writing Improvement:**
1. **Start simple** - short sentences
2. **Grammar check** рдХрд░рдирд╛
3. **Proofreading** habit рдмрдирд╛рдирд╛
4. **Regular practice** рдХрд░рдирд╛

**рдЖрдкрдХрд╛ specific English doubt рдХреНрдпрд╛ рд╣реИ? Grammar, vocabulary, рдпрд╛ writing рдХреЗ рдмрд╛рд░реЗ рдореЗрдВ?**`;
  }

  private generateReasoningAnswer(question: string, analysis: any): string {
    return `# ЁЯза **Logical Reasoning Guide**

## **рддрд░реНрдХрд╢реАрд▓ рд╕реЛрдЪ рдХрд╛ рд╡рд┐рдХрд╛рд╕ (Developing Logical Thinking):**

### **ЁЯОп Critical Thinking Process:**

#### **Question Everything:**
- **Why** рдпрд╣ рд╕рд╣реА рд╣реИ?
- **How** рдпрд╣ work рдХрд░рддрд╛ рд╣реИ?
- **What if** conditions рдЕрд▓рдЧ рд╣реЛрдВ?

#### **Evidence-Based Thinking:**
- **Facts** рдФрд░ **opinions** рдореЗрдВ difference
- **Reliable sources** identify рдХрд░рдирд╛
- **Bias** рдХреЛ recognize рдХрд░рдирд╛

### **ЁЯФН Problem-Solving Framework:**

#### **Step 1: Define Problem**
- **Clearly** problem рдХреЛ state рдХрд░рдирд╛
- **Assumptions** identify рдХрд░рдирд╛

#### **Step 2: Gather Information**  
- **Relevant data** collect рдХрд░рдирд╛
- **Multiple perspectives** consider рдХрд░рдирд╛

#### **Step 3: Generate Solutions**
- **Creative thinking** apply рдХрд░рдирд╛
- **Brainstorming** techniques use рдХрд░рдирд╛

#### **Step 4: Evaluate Options**
- **Pros рдФрд░ cons** list рдХрд░рдирд╛
- **Consequences** predict рдХрд░рдирд╛

#### **Step 5: Implement & Review**
- **Best solution** choose рдХрд░рдирд╛
- **Results** evaluate рдХрд░рдирд╛

## **ЁЯзй Logical Puzzles Practice:**
Regular practice рд╕реЗ logical thinking improve рд╣реЛрддреА рд╣реИред

**рдЖрдкрдХрд╛ specific reasoning problem рдХреНрдпрд╛ рд╣реИ? Logic puzzles, critical thinking, рдпрд╛ decision making?**`;
  }

  private generateGeneralAnswer(question: string, analysis: any): string {
    return `# ЁЯМЯ **General Knowledge Response**

## **рдЖрдкрдХреЗ рдкреНрд░рд╢реНрди рдХрд╛ рд╡рд┐рд╢реНрд▓реЗрд╖рдг (Question Analysis):**

рдореИрдВ рдЖрдкрдХреЗ рдкреНрд░рд╢реНрди рдХреЛ рд╕рдордЭрдиреЗ рдХреА рдХреЛрд╢рд┐рд╢ рдХрд░ рд░рд╣рд╛ рд╣реВрдВред рдпрд╣ рдПрдХ interesting topic рд╣реИ!

## **ЁЯФН Comprehensive Approach:**

### **Multiple Perspectives:**
- **Historical** context рджреЗрдЦрдирд╛
- **Current** relevance рд╕рдордЭрдирд╛  
- **Future** implications consider рдХрд░рдирд╛

### **Practical Applications:**
- **Real-world** examples рджреЗрдирд╛
- **Daily life** рдореЗрдВ рдХреИрд╕реЗ useful рд╣реИ
- **Skills** development рдХреЗ рд▓рд┐рдП рдХреИрд╕реЗ use рдХрд░реЗрдВ

## **ЁЯТб Learning Strategy:**

### **Deep Understanding:**
- **Why** рдпрд╣ important рд╣реИ
- **How** рдпрд╣ work рдХрд░рддрд╛ рд╣реИ
- **When** apply рдХрд░рдирд╛ рдЪрд╛рд╣рд┐рдП

### **Critical Questions:**
- рдХреНрдпрд╛ рдпрд╣ **reliable** source рд╕реЗ рдЖрдпрд╛ рд╣реИ?
- рдХрдпрд╛ **evidence** support рдХрд░рддрд╛ рд╣реИ?
- **Alternative viewpoints** рдХреНрдпрд╛ рд╣реИрдВ?

## **ЁЯОп Next Steps:**
рдЖрдкрдХреА curiosity рдЕрдЪреНрдЫреА рд╣реИ! рдЬреНрдЮрд╛рди рдкреНрд░рд╛рдкреНрдд рдХрд░рдиреЗ рдХреА рдпрд╣ journey continue рд░рдЦреЗрдВред

**рдХреГрдкрдпрд╛ рдЕрдкрдирд╛ рдкреНрд░рд╢реНрди more specific рдХрд░реЗрдВ рддрд╛рдХрд┐ рдореИрдВ detailed рдФрд░ focused answer рджреЗ рд╕рдХреВрдВред рдХрд┐рд╕ particular aspect рдХреЗ рдмрд╛рд░реЗ рдореЗрдВ рдЬрд╛рдирдирд╛ рдЪрд╛рд╣рддреЗ рд╣реИрдВ?**`;
  }

  private findRelatedTopics(question: string, subject: string): string[] {
    const topics: string[] = [];
    
    switch (subject) {
      case 'math':
        topics.push('Algebra', 'Geometry', 'Calculus', 'Statistics', 'Trigonometry');
        break;
      case 'science':
        topics.push('Physics', 'Chemistry', 'Biology', 'Earth Science', 'Astronomy');
        break;
      case 'english':
        topics.push('Grammar', 'Vocabulary', 'Writing', 'Literature', 'Communication');
        break;
      case 'reasoning':
        topics.push('Logic', 'Critical Thinking', 'Problem Solving', 'Decision Making');
        break;
      default:
        topics.push('General Knowledge', 'Current Affairs', 'History', 'Geography');
    }
    
    return topics.slice(0, 3);
  }

  private generateFollowUpQuestions(question: string, subject: string): string[] {
    const questions: string[] = [];
    
    switch (subject) {
      case 'math':
        questions.push(
          'рдХреНрдпрд╛ рдЖрдк рдЗрд╕реЗ рдЕрд▓рдЧ method рд╕реЗ solve рдХрд░рдирд╛ рдЪрд╛рд╣реЗрдВрдЧреЗ?',
          'рдЗрд╕ concept рдХреЗ real-world applications рдХреНрдпрд╛ рд╣реИрдВ?',
          'Related math problems practice рдХрд░рдирд╛ рдЪрд╛рд╣реЗрдВрдЧреЗ?'
        );
        break;
      case 'science':
        questions.push(
          'рдЗрд╕ phenomenon рдХреА scientific explanation рдЪрд╛рд╣рд┐рдП?',
          'Daily life рдореЗрдВ рдЗрд╕рдХрд╛ application рдХреИрд╕реЗ рджреЗрдЦрддреЗ рд╣реИрдВ?',
          'Related experiments рдХреЗ рдмрд╛рд░реЗ рдореЗрдВ рдЬрд╛рдирдирд╛ рдЪрд╛рд╣реЗрдВрдЧреЗ?'
        );
        break;
      case 'english':
        questions.push(
          'Grammar rules рдФрд░ examples рдЪрд╛рд╣рд┐рдП?',
          'Writing skills improve рдХрд░рдиреЗ рдХреЗ tips рдЪрд╛рд╣рд┐рдП?',
          'Vocabulary building techniques рдЬрд╛рдирдирд╛ рдЪрд╛рд╣рддреЗ рд╣реИрдВ?'
        );
        break;
      default:
        questions.push(
          'рдЗрд╕ topic рдкрд░ рдФрд░ detail рдЪрд╛рд╣рд┐рдП?',
          'Related concepts рдХреЗ рдмрд╛рд░реЗ рдореЗрдВ рдЬрд╛рдирдирд╛ рдЪрд╛рд╣рддреЗ рд╣реИрдВ?',
          'Practical applications discuss рдХрд░реЗрдВ?'
        );
    }
    
    return questions;
  }

  private formatEnhancedAnswer(answer: string, subject: string, question: string, analysis: any): string {
    const timestamp = new Date().toLocaleString('hi-IN');
    const confidenceText = analysis.confidence > 0.8 ? 'рдЙрдЪреНрдЪ' : analysis.confidence > 0.6 ? 'рдордзреНрдпрдо' : 'рдирд┐рдореНрди';
    
    let formattedAnswer = `${answer}\n\n---\n\n`;
    
    // Add confidence and metadata
    formattedAnswer += `**ЁЯУК Response Quality:**\n`;
    formattedAnswer += `тАв **Confidence Level:** ${confidenceText} (${Math.round(analysis.confidence * 100)}%)\n`;
    formattedAnswer += `тАв **Question Type:** ${analysis.questionType}\n`;
    formattedAnswer += `тАв **Difficulty Level:** ${analysis.difficulty}\n\n`;
    
    // Add subject-specific learning tips
    const learningTips = {
      math: '**ЁЯзо Math Tip:** Practice regularly рдХрд░реЗрдВ рдФрд░ concepts рдХреЛ real problems рдкрд░ apply рдХрд░реЗрдВред',
      science: '**ЁЯФм Science Tip:** Observation рдФрд░ experimentation рд╕реЗ рд╕реАрдЦреЗрдВ, theory рдХреЛ practice рд╕реЗ connect рдХрд░реЗрдВред',
      english: '**ЁЯУЪ English Tip:** Daily reading рдФрд░ speaking practice рд╕реЗ fluency improve рд╣реЛрдЧреАред',
      reasoning: '**ЁЯза Reasoning Tip:** Different perspectives рд╕реЗ think рдХрд░реЗрдВ рдФрд░ logic рдХреЛ question рдХрд░реЗрдВред',
      geography: '**ЁЯЧ║я╕П Geography Tip:** Maps use рдХрд░реЗрдВ рдФрд░ current events рдХреЛ geography рд╕реЗ relate рдХрд░реЗрдВред',
      knowledge: '**ЁЯУЦ Learning Tip:** Multiple sources рд╕реЗ information verify рдХрд░реЗрдВ рдФрд░ critical thinking apply рдХрд░реЗрдВред'
    };
    
    formattedAnswer += learningTips[subject as keyof typeof learningTips] || learningTips.knowledge;
    
    // Add encouragement and next steps
    formattedAnswer += `\n\n**ЁЯМЯ Keep Learning:** рдЖрдкрдХреА curiosity рдмрд╣реБрдд рдЕрдЪреНрдЫреА рд╣реИ! Continue asking questions рдФрд░ exploring рдХрд░рддреЗ рд░рд╣реЗрдВред`;
    
    formattedAnswer += `\n\n*Enhanced AI рджреНрд╡рд╛рд░рд╛ comprehensive responseред Quality рдФрд░ accuracy рдХреЗ рд▓рд┐рдП continuously improvingред*`;
    formattedAnswer += `\nЁЯУЕ ${timestamp}`;
    
    return formattedAnswer;
  }

  // Additional utility methods
  getConversationHistory() {
    return this.conversationHistory.slice(-5); // Last 5 interactions
  }

  clearHistory() {
    this.conversationHistory = [];
  }

  setCustomKnowledge(subject: string, topic: string, content: any) {
    if (!this.knowledgeBase[subject]) {
      this.knowledgeBase[subject] = {};
    }
    this.knowledgeBase[subject][topic] = content;
  }
}

export const enhancedAIService = new EnhancedAIService();
